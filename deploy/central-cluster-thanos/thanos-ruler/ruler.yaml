apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-ruler-rules
  namespace: monitoring
data:
  alert_down_services.rules.yaml: |
    groups:
    - name: example-recording-rules
      interval: 30s
      rules:
      - record: instance:cpu_usage:avg
        expr: avg(rate(node_cpu_seconds_total[5m])) by (instance)
      - record: cluster_cpu_average
        expr: avg(container_cpu_usage_seconds_total) by (cluster)
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-stateless-ruler-config
  namespace: monitoring
data:
  rw-config.yaml: |
    remote_write:
      - url: "http://receiver-write.example.com:30657/api/v1/receive"
        queue_config:
          max_samples_per_send: 40000
          max_shards: 50
          capacity: 12000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: thanos-ruler
  name: thanos-ruler
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-ruler
  serviceName: thanos-ruler
  template:
    metadata:
      labels:
        app: thanos-ruler
        thanos-store-api: "true"
    spec:
      containers:
        - name: thanos
          image: quay.io/thanos/thanos:v0.30.2
          args:
            - rule
            - --log.level=debug
            - --data-dir=/data
            - --eval-interval=15s
            - --rule-file=/etc/thanos-ruler/*.rules.yaml
            # - --alertmanagers.url=http://alertmanager:9093
            # - --alert.query-url=http://querier-thanos.local
            - --query=querier.monitoring.svc.cluster.local:9090
            # - "--objstore.config={type: GCS, config: {bucket: thanos-ruler}}"
            - --label=ruler_cluster="prometheus-ha"
            - --label=replica="$(POD_NAME)"
            - --remote-write.config-file=/etc/thanos/config/thanos-stateless-ruler-config/rw-config.yaml
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: http
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
            httpGet:
              port: http
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: http
              path: /-/ready
          volumeMounts:
            - mountPath: /etc/thanos-ruler
              name: config
            - mountPath: /etc/thanos/config/thanos-stateless-ruler-config
              name: thanos-stateless-ruler-config
              readOnly: true
      volumes:
        - configMap:
            name: thanos-ruler-rules
          name: config
        - configMap:
            name: thanos-stateless-ruler-config
          name: thanos-stateless-ruler-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: thanos-ruler
  name: thanos-ruler
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: grpc
    port: 10901
    targetPort: 10901
  - name: http
    port: 10902
    targetPort: 10902
  # - name: reloader
  #   port: 9533
  #   targetPort: 9533
  selector:
    app: thanos-ruler
